<launch>

  <arg name="launch_joystick" />
  <arg name="launch_motor_control" />
  <arg name="launch_arduino" />

  <arg name="tty" default="$(optenv ARDUINO_TTY /dev/ttyACM0)" />

  <!-- The number of encoder ticks per meter.
    d = 0.060  wheel diameter
    revolutions/meter = 1/(d*3.14159)
    gear ratio = 46.8512 : 1 (from Pololu web site)
    ticks/revolution = gear ratio * 48 cpr = 2248.8576
    ticks per meter = ticks/revolution * revolutions/meter = 11930.57
  -->
  <arg name="ticks_per_meter" value="11931" />

  <!-- Wheel separation, in meters. -->
  <arg name="wheel_separation" value=".203" />

  <!-- PID control parameters.

    These were determined using the Good-Gain method.
    See http://home.hit.no/~hansha/documents/control/theory/tuning_pid_controller.pdf.
    Using an initial Kp0=0.6, the time between the first overshoot and the
    first undershoot was found to be about Tou=0.144 sec.

    The Good-Gain recommendations are, then to set:
        Kp = 80% * Kp0 = 0.048
        Ti = 1.5 * Tou = 0.215
        Td = Ti/4 = 0.0538

    where the constants are derived from the time constants as follows:
        Ki = Kp0/Ti
        Kd = Kp0*Td
  -->
  <arg name="Kp" value="0.048" />
  <arg name="Ki" value="0.279" />
  <arg name="Kd" value="0.00323" />

  <param name="ticks_meter" value="$(arg ticks_per_meter)" />

  <node name="joystick" pkg="differential_drive" type="virtual_joystick.py" if="$(arg launch_joystick)">
    <param name="publish_rate" value="100" />
    <param name="x_min" value="-0.3" />
    <param name="x_max" value="0.3" />
    <remap from="twist" to="cmd_vel" />
  </node>

  <node name="twist_to_motors" pkg="differential_drive" type="twist_to_motors.py" if="$(arg launch_motor_control)">
    <param name="base_width" value="$(arg wheel_separation)" />
    <param name="rate" value="10" />
    <remap from="twist" to="cmd_vel" />
  </node>

  <node name="tf_publisher" pkg="differential_drive" type="diff_tf.py" if="$(arg launch_motor_control)">
    <param name="base_width" value="$(arg wheel_separation)" />
  </node>

  <node name="romeo" pkg="rosserial_python" type="serial_node.py" if="$(arg launch_arduino)">
    <param name="baud" value="57600" />
    <param name="port" value="$(arg tty)" />
    <param name="control_rate" value="100" />
    <param name="vtarget_timeout" value="0.1" />
    <param name="Kp" value="$(arg Kp)" />
    <param name="Ki" value="$(arg Ki)" />
    <param name="Kd" value="$(arg Kd)" />
  </node>

</launch>
